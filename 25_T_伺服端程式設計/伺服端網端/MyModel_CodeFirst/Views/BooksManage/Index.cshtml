@model IEnumerable<MyModel_CodeFirst.Models.Book>

@{
  
    ViewData["Title"] = "訪客留言板管理";
}

<h3 class="text-center">@ViewData["Title"]</h3>



@* //4.1.6 依喜好自行修改介面 *@
<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-12">
            <div class="card mb-4" title="@item.BookID">
                <div class="row no-gutters">
                    <div class="col-2">
                        <img src="~/BookPhotos/@item.Photo" class="card-img" />
                    </div>
                    <div class="col-8">
                        <div class="card-body">
                            <h4 class="card-title fw-bold">@Html.DisplayFor(modelItem => item.Title)</h4>
                            <p class="card-text text-truncate" style="max-width:800px">@Html.DisplayFor(modelItem => item.Description)</p>
                            <p class="card-text text-end">@Html.DisplayFor(modelItem => item.Author) | @Html.DisplayFor(modelItem => item.TimeStamp)</p>
                        </div>
                    </div>
                    <div class="col-2 d-flex justify-content-center align-items-center">
                        <form asp-action="Delete" asp-route-id="@item.BookID">
                            <button type="submit" class="btn btn-danger" onclick="return confirm('確定要刪除嗎？')">刪除</button>
                        </form>

                        @* //4.3.6 使用Bootstrap的Collapse Component來呈現留言資料 *@
                        <button class="btn btn-success" type="button" data-bs-toggle="collapse" data-bs-target="#B@(item.BookID)">@* //4.3.7 將呈現回覆留言的id改為動態產生 *@
                            顯示
                        </button>
                    </div>
                    @* //4.3.1 在Index View中加入呈現回覆留言的ViewComponent *@
                    <div id="B@(item.BookID)" class="collapse">@* //4.3.7 將呈現回覆留言的id改為動態產生 *@
                        @* //4.3.5 在Index View中呈現回覆留言的ViewComponent增加isDel參數的傳遞 *@
                        @await Component.InvokeAsync("VCRebooks", new { bookID = item.BookID, isDel = true })
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@* //4.4.6 撰寫Ajax程式以呼叫DeleteReBook Action *@
@section Scripts {
    <script>
        function delReBook(reBookId, BookID) {
            if (confirm("確定要刪除嗎？")) {

                $.ajax({
                  type:"post",
                  url:"/BooksManage/DeleteReBook",
                  data:{id:reBookId},
                  success:function(){
                    //4.4.8 利用GetRebookByViewComponent Action局部更新畫面以顯示刪除後的回覆留言資料畫面
                      $('#B'+BookID).load("/BooksManage/GetRebookByViewComponent/"+BookID);
                  }
                });


            }
        }
    </script>
}
