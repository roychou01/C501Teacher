@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "我的訂單";
}

<h1>@ViewData["Title"]</h1>



<div class="accordion" id="accordionPanelsStayOpenExample">
    @foreach (var item in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button bg-white" type="button" data-bs-toggle="collapse" data-bs-target="#@item.OrderID">
                    <table class="table table-borderless">
                        <tbody>
                            <tr>
                                <td>
                                    @item.OrderID
                                   @*  @Html.DisplayFor(modelItem => item.OrderID) *@
                                </td>
                                <td>
                                    @item.OrderDate
                                 @*    @Html.DisplayFor(modelItem => item.OrderDate) *@
                                </td>
                                <td>
                                    @item.ContactName
                                   @*  @Html.DisplayFor(modelItem => item.ContactName) *@
                                </td>
                                <td>
                                    @item.ContactAddress
                                 @*    @Html.DisplayFor(modelItem => item.ContactAddress) *@
                                </td>
                                <td>
                                    @item.MemberName
                                    @* @Html.DisplayFor(modelItem => item.Member.Name) *@
                                </td>
                                <td>
                                    @item.Total
                                   
                                </td>
                            </tr>
                        </tbody>
                        
                    </table>

                </button>
            </h2>
            <div id="@item.OrderID" class="accordion-collapse collapse">
                <div class="accordion-body">
                    @await Component.InvokeAsync("VCGetOrderDetailByOrderID", new { id = item.OrderID })

                </div>
            </div>
        </div>
    }

</div>



@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member)
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Member.Name)
                </td>

            </tr>

            @await Component.InvokeAsync("VCGetOrderDetailByOrderID", new { id = item.OrderID })
        }
    </tbody>
</table> *@
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="addNewOrderToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body fs-5">
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @if (TempData["OrderMessage"] != null)
    {


        <script>

            const addNewOrderToast = document.getElementById('addNewOrderToast')
            const toastBootstrap = bootstrap.Toast.getOrCreateInstance(addNewOrderToast)
            $('#addNewOrderToast .toast-body').html("新增訂單成功!!");
            toastBootstrap.show()
            localStorage.removeItem("cart"); //把購物車清空
        </script>

    }

}


