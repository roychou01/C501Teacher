@model GoodStore.Models.Order

@{
    ViewData["Title"] = "Create";
}

<h1>我要結帳</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
           @*  <div class="form-group">
                <label asp-for="OrderID" class="control-label"></label>
                <input asp-for="OrderID" class="form-control" />
                <span asp-validation-for="OrderID" class="text-danger"></span>
            </div> *@
          @*   <div class="form-group">
                <label asp-for="MemberID" class="control-label"></label>
                <select asp-for="MemberID" class ="form-control" asp-items="ViewBag.MemberID"></select>
            </div> *@
            <div class="form-group">
                <label asp-for="ContactName" class="control-label"></label>
                <input asp-for="ContactName" class="form-control" />
                <span asp-validation-for="ContactName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactAddress" class="control-label"></label>
                <input asp-for="ContactAddress" class="form-control" />
                <span asp-validation-for="ContactAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <input type="hidden" name="Cart" id="Cart" />
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $('#Cart').val(localStorage.getItem("cart"));  
    </script>
}
